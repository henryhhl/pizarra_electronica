{"version":3,"sources":["types/types.js","context/chat/chatReducer.js","context/chat/chatContext.js","context/sala/salaReducers.js","context/sala/salaContext.js","helpers/fetch.js","auth/authContext.js","helpers/scroll.js","context/table/TableReducers.js","context/table/TableContext.js","context/socketContext.js","hooks/useSocket.js","pages/loadingPage.js","pages/loginPage.js","pages/registerPage.js","router/authRoute.js","pages/homePage.js","layouts/appMain.js","pages/pizarraVirtualPage.js","router/HomeRoute.js","router/privateRoute.js","router/publicRoute.js","router/appRoute.js","App.js","reportWebVitals.js","index.js"],"names":["types","ChatReducer","state","action","type","array_usuario","payload","chatActivo","uid","array_mensaje","de","para","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","SalaReducer","array_sala","SalaContext","SalaProvider","salaState","dispatchSala","baseUrl","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","nombre","apellido","usuario","email","onOffLine","AuthProvider","useState","auth","setAuth","useContext","login","password","response","setItem","register","verificaToken","useCallback","console","log","removeItem","logout","scrollToBottom","id","animateScroll","containerId","duration","TableReducer","array_table","TableContext","TableProvider","tableState","dispatchTable","SocketContet","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","users","emit","salas","tables","mensaje","LoadingPage","className","LoginPage","rememberme","form","setForm","evt","preventDefault","Swal","fire","remembermeUsuario","onSubmit","placeholder","required","onChange","target","checked","readOnly","onClick","to","disabled","length","RegisterPage","message","todoOk","AuthRoute","exact","path","render","props","HomePage","setMensaje","history","useHistory","nombreSala","setNombreSala","messages","onSubmitSala","trim","setKeyMenu","gutter","xs","span","sm","md","style","position","Item","border","Meta","avatar","marginLeft","icon","UserOutlined","top","title","display","justifyContent","paddingRight","href","LeftOutlined","padding","borderRadius","backgroundColor","color","cursor","height","overflowY","map","item","key","width","marginTop","float","marginBottom","minWidth","onKeyPress","dataSource","filter","renderItem","onActiveChat","description","shape","size","keyMenu","orientation","margin","Ribbon","text","iniciar","user","fkidusers","push","_id","justify","Header","Layout","Footer","Content","AppMain","minHeight","overlay","Divider","trigger","marginRight","CaretDownFilled","theme","mode","activeKey","Panel","Collapse","withRouter","itemClass","setItemClass","match","params","uidsala","sala","onSubmitTableClass","subtitle","descripcion","get_data","table","header","fontSize","textAlign","visible","modal","left","contentClassName","closable","index","contentStyle","onResizeStart","onResize","onResizeEnd","move","document","getElementById","getBoundingClientRect","onDragStart","onDrag","onDragEnd","paddingBottom","background","alignItems","CloseOutlined","accordion","defaultActiveKey","fontWeight","draggable","disx","pageX","disy","pageY","paddingLeft","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","createBrowserHistory","HomeRoute","PrivateRoute","isAuthenticated","Component","component","rest","PublicRoute","AppRoute","click","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2b01bcb3.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    getUsuario: '[Chat] Usuario Cargados',\r\n    activarChat: '[Chat] Activar Chat',\r\n    nuevoMensaje: '[Chat] Nuevo Mensaje',\r\n    cargarMensaje: '[Chat] Cargar Mensaje',\r\n    limpiarChat: '[Chat] Limpiar Chat',\r\n\r\n    getSala: '[Sala] Salas Cargados',\r\n    getSalaUsuario: '[Sala Usuario] Salas Usuarios Cargados',\r\n    limpiarSalaUsuario: '[Sala Usuario] Salas Usuarios Cargados',\r\n    limpiarSala: '[Sala] Limpiar Cargados',\r\n\r\n    getTable: '[Table] Tables Cargados',\r\n    limpiarTable: '[Table] Limpiar Cargados',\r\n};","\r\nimport { types } from '../../types/types';\r\n\r\nexport const ChatReducer = ( state, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.getUsuario:\r\n            return {\r\n                ...state,\r\n                array_usuario: [ ...action.payload ],\r\n            };\r\n\r\n        case types.activarChat:\r\n            if ( state.chatActivo?.uid === action.payload?.uid ) return state;\r\n            return {\r\n                ...state,\r\n                chatActivo: action.payload,\r\n                array_mensaje: [],\r\n            };\r\n\r\n        case types.limpiarChat:\r\n            return {\r\n                ...state,\r\n                uid: '',\r\n                chatActivo: null,\r\n                array_usuario: [],\r\n                array_mensaje: [],\r\n            };\r\n\r\n        case types.nuevoMensaje:\r\n            if ( state.chatActivo?.uid === action.payload.de || state.chatActivo?.uid === action.payload.para ) {\r\n                return {\r\n                    ...state,\r\n                    array_mensaje: [ ...state.array_mensaje ,action.payload ],\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case types.cargarMensaje:\r\n            return {\r\n                ...state,\r\n                array_mensaje: [ ...action.payload ],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport React, { createContext, useReducer } from 'react';\r\nimport { ChatReducer } from './chatReducer';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n    uid: '',\r\n    chatActivo: null,\r\n    array_usuario: [],\r\n    array_mensaje: [],\r\n};\r\n\r\nexport const ChatProvider = ( { children } ) => {\r\n\r\n    const [ chatState, dispatch ] = useReducer( ChatReducer, initialState );\r\n\r\n    return (\r\n        <ChatContext.Provider value={ { chatState, dispatch } }>\r\n            { children }\r\n        </ChatContext.Provider>\r\n    );\r\n};\r\n","\r\nimport { types } from '../../types/types';\r\n\r\nexport const SalaReducer = ( state, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.getSala:\r\n            return {\r\n                ...state,\r\n                array_sala: [ ...action.payload ],\r\n            };\r\n\r\n        case types.getSalaUsuario:\r\n            return {\r\n                ...state,\r\n                array_usuario: [ ...action.payload ],\r\n            };\r\n\r\n        case types.limpiarSalaUsuario:\r\n            return {\r\n                ...state,\r\n                array_usuario: [],\r\n            };\r\n\r\n        case types.limpiarSala:\r\n            return {\r\n                ...state,\r\n                array_sala: [],\r\n                array_usuario: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport React, { createContext, useReducer } from 'react';\r\nimport { SalaReducer } from './salaReducers';\r\n\r\nexport const SalaContext = createContext();\r\n\r\nconst initialState = {\r\n    array_sala: [],\r\n    array_usuario: [],\r\n};\r\n\r\nexport const SalaProvider = ( { children } ) => {\r\n\r\n    const [ salaState, dispatchSala ] = useReducer( SalaReducer, initialState );\r\n\r\n    return (\r\n        <SalaContext.Provider value={ { salaState, dispatchSala } }>\r\n            { children }\r\n        </SalaContext.Provider>\r\n    );\r\n};\r\n","\r\nconst baseUrl = \"https://pizarra-virtual.herokuapp.com/api\";\r\n// const baseUrl = \"http://localhost:5000/api\";\r\n// const baseUrl = \"/api\";\r\n\r\nexport const fetchSinToken = async ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        const resp = await fetch( url );\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        } );\r\n        return await resp.json();\r\n    }\r\n};\r\n\r\nexport const fetchConToken = async ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }${ endpoint }`;\r\n    const token = localStorage.getItem('token') || \"\";\r\n    if ( method === 'GET' ) {\r\n        try {\r\n            const resp = await fetch( url, {\r\n                headers: {\r\n                    'x-token': token,\r\n                },\r\n            } );\r\n            return await resp.json();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    } else {\r\n        const resp = await fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify(data),\r\n        } );\r\n        return await resp.json();\r\n    }\r\n};\r\n","\r\nimport React, { createContext, useCallback, useContext, useState } from 'react';\r\n\r\nimport { ChatContext } from '../context/chat/chatContext';\r\nimport { SalaContext } from '../context/sala/salaContext';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\n\r\nimport { types } from '../types/types';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    checking: true,\r\n    logged: false,\r\n    nombre: null,\r\n    apellido: null,\r\n    usuario: null,\r\n    email: null,\r\n    onOffLine: false,\r\n};\r\n\r\nexport const AuthProvider = ( { children } ) => {\r\n\r\n    const [ auth, setAuth ] = useState( initialState );\r\n    const { dispatch } = useContext( ChatContext );\r\n    const { dispatchSala } = useContext( SalaContext );\r\n\r\n    const login = async ( usuario, password ) => {\r\n        const resp = await fetchSinToken( \"/auth/login\", { usuario, password }, 'POST' );\r\n        if ( resp.response === 1 ) {\r\n\r\n            dispatchSala( { type: types.getSala, payload: resp.array_sala, } );\r\n\r\n            localStorage.setItem( \"token\", resp.token );\r\n            const { usuario } = resp;\r\n\r\n            setAuth( {\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                nombre: usuario.nombre,\r\n                apellido: usuario.apellido,\r\n                usuario: usuario.usuario,\r\n                email: usuario.email,\r\n            } );\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const register = async ( nombre, apellido, email, usuario, password ) => {\r\n        const resp = await fetchSinToken( \"/auth/register\", { nombre, apellido, email, usuario, password }, 'POST' );\r\n        if ( resp.response === 1 ) {\r\n\r\n            dispatchSala( { type: types.getSala, payload: resp.array_sala, } );\r\n            \r\n            localStorage.setItem( \"token\", resp.token );\r\n            const { usuario } = resp;\r\n\r\n            setAuth( {\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                nombre: usuario.nombre,\r\n                apellido: usuario.apellido,\r\n                usuario: usuario.usuario,\r\n                email: usuario.email,\r\n            } );\r\n            return resp;\r\n        }\r\n        return resp;\r\n    };\r\n\r\n    const verificaToken = useCallback( async () => {\r\n        const token = localStorage.getItem('token');\r\n        if ( !token ) {\r\n            dispatchSala( { type: types.limpiarSala } );\r\n            dispatch( { type: types.limpiarChat } );\r\n            setAuth( {\r\n                uid: null,\r\n                checking: false,\r\n                logged: false,\r\n                nombre: null,\r\n                apellido: null,\r\n                usuario: null,\r\n                email: null,\r\n                onOffLine: false,\r\n            } );\r\n            return false;\r\n        }\r\n\r\n        const resp = await fetchConToken( \"/auth/newToken\");\r\n        console.log(resp);\r\n\r\n        if ( !resp ) {\r\n            localStorage.removeItem(\"token\");\r\n            setAuth( {\r\n                onOffLine: true,\r\n                checking: false,\r\n            } );\r\n            return false;\r\n        }\r\n\r\n        if ( resp.response === 1 ) {\r\n\r\n            localStorage.setItem( \"token\", resp.token );\r\n            const { usuario } = resp;\r\n\r\n            dispatchSala( { type: types.getSala, payload: resp.array_sala, } );\r\n            \r\n            setAuth( {\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                nombre: usuario.nombre,\r\n                apellido: usuario.apellido,\r\n                usuario: usuario.usuario,\r\n                email: usuario.email,\r\n                onOffLine: false,\r\n            } );\r\n\r\n            return true;\r\n        }\r\n\r\n        dispatchSala( { type: types.limpiarSala } );\r\n        dispatch( { type: types.limpiarChat } );\r\n\r\n        localStorage.removeItem(\"token\");\r\n        setAuth( {\r\n            uid: null,\r\n            checking: false,\r\n            logged: false,\r\n            nombre: null,\r\n            apellido: null,\r\n            usuario: null,\r\n            email: null,\r\n        } );\r\n\r\n        return false;\r\n\r\n    }, [ dispatchSala, dispatch ] );\r\n\r\n    const logout = ( ) => {\r\n        localStorage.removeItem(\"token\");\r\n\r\n        dispatch( { type: types.limpiarChat } );\r\n        dispatchSala( { type: types.limpiarSala } );\r\n\r\n        setAuth( {\r\n            uid: null,\r\n            checking: false,\r\n            logged: false,\r\n            nombre: null,\r\n            apellido: null,\r\n            usuario: null,\r\n            email: null,\r\n        } );\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={ {\r\n            auth,\r\n            login,\r\n            register,\r\n            verificaToken,\r\n            logout,\r\n        } }>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n","\r\nimport { animateScroll } from 'react-scroll';\r\n\r\nexport const scrollToBottom = ( id ) => {\r\n\r\n    animateScroll.scrollToBottom( {\r\n        containerId: id,\r\n        duration: 0, \r\n    } );\r\n};\r\n\r\nexport const scrollToBottomAnimated = ( id ) => {\r\n\r\n    animateScroll.scrollToBottom( {\r\n        containerId: id,\r\n        duration: 250, \r\n    } );\r\n};\r\n","\r\nimport { types } from '../../types/types';\r\n\r\nexport const TableReducer = ( state, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.getTable:\r\n            return {\r\n                ...state,\r\n                array_table: [ ...action.payload ],\r\n            };\r\n\r\n        case types.limpiarTable:\r\n            return {\r\n                ...state,\r\n                array_table: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport React, { createContext, useReducer } from 'react';\r\nimport { TableReducer } from './TableReducers';\r\n\r\nexport const TableContext = createContext();\r\n\r\nconst initialState = {\r\n    array_table: [],\r\n};\r\n\r\nexport const TableProvider = ( { children } ) => {\r\n\r\n    const [ tableState, dispatchTable ] = useReducer( TableReducer, initialState );\r\n\r\n    return (\r\n        <TableContext.Provider value={ { tableState, dispatchTable } }>\r\n            { children }\r\n        </TableContext.Provider>\r\n    );\r\n};\r\n","\r\nimport React, { createContext, useContext, useEffect } from 'react';\r\n\r\nimport { AuthContext } from '../auth/authContext';\r\nimport { ChatContext } from './chat/chatContext';\r\nimport { SalaContext } from './sala/salaContext';\r\n\r\nimport { useSocket } from '../hooks/useSocket';\r\n\r\nimport { types } from '../types/types';\r\nimport { scrollToBottom } from '../helpers/scroll';\r\nimport { TableContext } from './table/TableContext';\r\n\r\nexport const SocketContet = createContext();\r\n\r\nexport const SocketProvider = ( { children } ) => {\r\n\r\n    const { conectarSocket, desconectarSocket, online, socket } = useSocket( \"https://pizarra-virtual.herokuapp.com/\" );\r\n    // const { conectarSocket, desconectarSocket, online, socket } = useSocket( \"http://localhost:5000\" );\r\n\r\n    const { auth } = useContext( AuthContext );\r\n    const { dispatch } = useContext( ChatContext );\r\n    const { dispatchSala } = useContext( SalaContext );\r\n    const { dispatchTable } = useContext( TableContext );\r\n\r\n    useEffect( () => {\r\n        if ( auth.logged ) {\r\n            conectarSocket();\r\n        }\r\n    }, [ auth, conectarSocket ] );\r\n\r\n    useEffect( () => {\r\n        if ( !auth.logged ) {\r\n            desconectarSocket();\r\n        }\r\n    }, [ auth, desconectarSocket ] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'getUsuario', ( users ) => {\r\n            dispatch( { type: types.getUsuario, payload: users, } );\r\n        } );\r\n    }, [ socket, dispatch ] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'sala-actualizada', ( ) => {\r\n            socket?.emit( 'getSala', auth.uid );\r\n        } );\r\n    }, [ socket, dispatch ] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'getSala', ( salas ) => {\r\n            dispatchSala( { type: types.getSala, payload: salas, } );\r\n        } );\r\n    }, [ socket, dispatchSala ] );\r\n\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'ingresar-sala', ( tables ) => {\r\n            // console.log( \"Tables: \", tables )\r\n            dispatchTable( { type: types.getTable, payload: tables, } );\r\n        } );\r\n    }, [ socket, dispatchTable ] );\r\n\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'mensaje-personal', ( mensaje ) => {\r\n            dispatch( { type: types.nuevoMensaje, payload: mensaje, } );\r\n\r\n            scrollToBottom('messageID');\r\n        } );\r\n    }, [ socket, dispatch ] );\r\n\r\n\r\n    return (\r\n        <SocketContet.Provider value={ { socket, online } }>\r\n            { children }\r\n        </SocketContet.Provider>\r\n    );\r\n};\r\n","\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n\r\n    const [ socket, setSocket ] = useState( null );\r\n    const [ online, setOnline ] = useState( false );\r\n\r\n    const conectarSocket = useCallback( () => {\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        const socketTemp = io( serverPath, { \r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n            query: {\r\n                'x-token': token,\r\n            },\r\n        } );\r\n\r\n        setSocket( socketTemp );\r\n\r\n    }, [ serverPath ] );\r\n\r\n    const desconectarSocket = useCallback( () => {\r\n        socket?.disconnect();\r\n        setSocket( null );\r\n    }, [ socket ] );\r\n\r\n    useEffect( () => {\r\n        setOnline( socket?.connected );\r\n    }, [ socket ] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'connect', () => setOnline( true ) );\r\n    }, [ socket ] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'disconnect', () => setOnline( false ) );\r\n    }, [ socket ] );\r\n\r\n    return {\r\n        conectarSocket,\r\n        desconectarSocket,\r\n        online,\r\n        socket,\r\n    };\r\n};","\r\nimport React from 'react';\r\nimport '../css/loading.css';\r\n\r\nexport const LoadingPage = () => {\r\n\r\n    return (\r\n        <div className=\"contenedor\"> \r\n            <div className=\"group\"> \r\n                <div className=\"bigSqr\">\r\n                    <div className=\"square first\"></div>\r\n                    <div className=\"square second\"></div>\r\n                    <div className=\"square third\"></div>\r\n                    <div className=\"square fourth\"></div>\r\n                </div>\r\n                <div className=\"text\">loading</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { AuthContext } from '../auth/authContext';\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const { login } =  useContext( AuthContext );\r\n\r\n    const [ form, setForm ] = useState( {\r\n        usuario: \"admin\",\r\n        password: \"123456\",\r\n        rememberme: false,\r\n    } );\r\n\r\n    useEffect( () => {\r\n        const remembermeUsuario = localStorage.getItem( \"usuario\" );\r\n        if ( remembermeUsuario ) {\r\n            setForm( (form) => ( {\r\n                ...form,\r\n                usuario: remembermeUsuario,\r\n                rememberme: true,\r\n            } ) );\r\n        }\r\n    }, [] );\r\n\r\n    function onChangeUsuario( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            usuario: evt.target.value,\r\n        } );\r\n    };\r\n    function onChangePassword( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            password: evt.target.value,\r\n        } );\r\n    };\r\n    function onCheckedRememberme() {\r\n        console.log(1)\r\n        setForm( {\r\n            ...form,\r\n            rememberme: !form.rememberme,\r\n        } );\r\n    };\r\n\r\n    async function onSubmit( evt ) {\r\n        evt.preventDefault();\r\n        if ( form.rememberme ) {\r\n            localStorage.setItem( \"usuario\", form.usuario );\r\n        } else {\r\n            localStorage.removeItem( \"usuario\" );\r\n        }\r\n        const { usuario, password } = form;\r\n        const ok = await login( usuario, password );\r\n        if ( !ok ) {\r\n            Swal.fire( \"Error\", \"Credenciales incorrecto\", \"error\" );\r\n        }\r\n    };\r\n\r\n    function todoOk() {\r\n        return ( form.usuario.length > 0 && form.password.length > 0 );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6 col-lg-5\">\r\n                    <div className=\"login-wrap p-4 p-md-5\">\r\n                        <div className=\"icon d-flex align-items-center justify-content-center\">\r\n                            <span className=\"fa fa-user-o\"></span>\r\n                        </div>\r\n                        <h3 className=\"text-center mb-4\">\r\n                            Iniciar sesión\r\n                        </h3>\r\n                        <form onSubmit={ onSubmit } className=\"login-form\">\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Usuario\" required \r\n                                    value={form.usuario}\r\n                                    onChange={ onChangeUsuario }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group d-flex\">\r\n                                <input \r\n                                    type=\"password\"\r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Password\" required \r\n                                    value={form.password}\r\n                                    onChange={ onChangePassword }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group d-md-flex\">\r\n                                <div className=\"w-50\">\r\n                                    <label className=\"checkbox-wrap checkbox-primary\">\r\n                                        Recordarme\r\n                                        <input \r\n                                            type=\"checkbox\" checked={form.rememberme} readOnly\r\n                                        />\r\n                                        <span className=\"checkmark\" onClick={ () => onCheckedRememberme() }></span>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"w-50 text-md-right\">\r\n                                    <Link to=\"/auth/register\">Registrarse</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary rounded submit p-3 px-5\"\r\n                                    disabled={ !todoOk() }\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { AuthContext } from '../auth/authContext';\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const { register } =  useContext( AuthContext );\r\n\r\n    const [ form, setForm ] = useState( {\r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        email: \"\",\r\n        usuario: \"\",\r\n        password: \"\",\r\n    } );\r\n\r\n    function onChangeNombre( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            nombre: evt.target.value,\r\n        } );\r\n    };\r\n    function onChangeApellido( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            apellido: evt.target.value,\r\n        } );\r\n    };\r\n    function onChangeEmail( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            email: evt.target.value,\r\n        } );\r\n    };\r\n    function onChangeUsuario( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            usuario: evt.target.value,\r\n        } );\r\n    };\r\n    function onChangePassword( evt ) {\r\n        setForm( {\r\n            ...form,\r\n            password: evt.target.value,\r\n        } );\r\n    };\r\n\r\n    async function onSubmit( evt ) {\r\n        evt.preventDefault();\r\n\r\n        const { nombre, apellido, email, usuario, password } = form;\r\n        const resp = await register( nombre, apellido, email, usuario, password );\r\n        if ( resp.response !== 1 ) {\r\n            Swal.fire( \"Error\", resp.message, \"error\" );\r\n        }\r\n    };\r\n\r\n    function todoOk() {\r\n        const { nombre, apellido, email, usuario, password } = form;\r\n        return ( nombre.length > 0 && apellido.length > 0 && email.length > 0 && usuario.length > 0 && password.length > 0 );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6 col-lg-5\">\r\n                    <div className=\"login-wrap p-4 p-md-5\">\r\n                        <h3 className=\"text-center mb-4\">\r\n                            Nueva cuenta\r\n                        </h3>\r\n                        <form onSubmit={ onSubmit } className=\"login-form\">\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Nombre\" required \r\n                                    value={form.nombre}\r\n                                    onChange={ onChangeNombre }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Apellido\" required \r\n                                    value={form.apellido}\r\n                                    onChange={ onChangeApellido }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Email\" required \r\n                                    value={form.email}\r\n                                    onChange={ onChangeEmail }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Usuario\" required \r\n                                    value={form.usuario}\r\n                                    onChange={ onChangeUsuario }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group d-flex\">\r\n                                <input \r\n                                    type=\"password\"\r\n                                    className=\"form-control rounded-left\" \r\n                                    placeholder=\"Password\" required \r\n                                    value={form.password}\r\n                                    onChange={ onChangePassword }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group d-md-flex\">\r\n                                <div className=\"w-50\">\r\n                                    \r\n                                </div>\r\n                                <div className=\"w-50 text-md-right\">\r\n                                    <Link to=\"/auth/login\">Iniciar sesion</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary rounded submit p-3 px-5\"\r\n                                    disabled={ !todoOk() }\r\n                                >\r\n                                    Registrarme\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","\r\nimport React from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { LoginPage } from '../pages/loginPage';\r\nimport { RegisterPage } from '../pages/registerPage';\r\nimport '../css/auth.css';\r\n\r\nexport const AuthRoute = () => {\r\n\r\n    return (\r\n        <section className=\"ftco-section\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" render={ ( props ) => <LoginPage { ...props } /> } />\r\n                    <Route exact path=\"/auth/register\" render={ ( props ) => <RegisterPage { ...props } /> } />\r\n\r\n                    <Redirect exact to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { Alert, Avatar, Col, List, Row, Input, Card, Button, Divider, Badge } from 'antd';\r\nimport { LeftOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { ChatContext } from '../context/chat/chatContext';\r\nimport { AuthContext } from '../auth/authContext';\r\nimport { SocketContet } from '../context/socketContext';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { scrollToBottom } from '../helpers/scroll';\r\nimport { SalaContext } from '../context/sala/salaContext';\r\n\r\nexport const HomePage = ( props ) => {\r\n\r\n    const [ mensaje, setMensaje ] = useState('');\r\n    const history = useHistory();\r\n\r\n    const [ nombreSala, setNombreSala ] = useState('');\r\n\r\n    const { chatState, dispatch } = useContext( ChatContext );\r\n    const { auth } = useContext( AuthContext );\r\n    const { socket } = useContext( SocketContet );\r\n    const { salaState } = useContext( SalaContext );\r\n\r\n    async function onActiveChat( chatActivo ) {\r\n        dispatch( {\r\n            type: types.activarChat,\r\n            payload: chatActivo,\r\n        } );\r\n        const resp = await fetchConToken(\"/mensaje/show/\" + chatActivo.uid );\r\n        if ( resp.response === 1 ) {\r\n            dispatch( {\r\n                type: types.cargarMensaje,\r\n                payload: resp.messages,\r\n            } );\r\n\r\n            scrollToBottom('messageID');\r\n        }\r\n    };\r\n    function onChangeMensaje(evt) {\r\n        setMensaje( evt.target.value );\r\n    };\r\n    function onKeyPressEnter(evt) {\r\n        if ( evt.key === \"Enter\" ) {\r\n            if ( mensaje.length === 0 ) return;\r\n            socket.emit( 'mensaje-personal', {\r\n                de: auth.uid,\r\n                para: chatState.chatActivo.uid,\r\n                mensaje,\r\n            } );\r\n            setMensaje('');\r\n        }\r\n    };\r\n    \r\n    function onSubmitSala() {\r\n        if ( nombreSala.trim().length === 0 ) return;\r\n        socket.emit( 'store-sala', {\r\n            nombreSala, uid: auth.uid,\r\n        } );\r\n        props.setKeyMenu('1');\r\n        setNombreSala('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={ [ 12, 8 ] }>\r\n                { chatState.chatActivo  ?\r\n                    <Col xs={ { span: 24, } } sm={{ span: 12, }} md={{ span: 8, }} style={{ position: 'relative', }}>\r\n                        <List.Item style={{ border: '1px solid rgba(140, 140, 140, 0.35)', }}>\r\n                            <List.Item.Meta\r\n                                avatar={ <Avatar style={{ marginLeft: 5, }} icon={<UserOutlined style={{ position: 'relative', top: -5, }} />} /> }\r\n                                title={ \r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between', paddingRight: 5, }}>\r\n                                        <a href=\"/home\" onClick={ (evt) => evt.preventDefault() } style={{ position: 'relative', top: 4, }}>\r\n                                            {`${chatState.chatActivo.nombre} ${chatState.chatActivo.apellido}`}\r\n                                        </a>\r\n                                        <LeftOutlined \r\n                                            style={{ \r\n                                                padding: 6, borderRadius: 20, position: 'relative', top: 4,\r\n                                                backgroundColor: '#1890ff', color: 'white', cursor: 'pointer',\r\n                                            }} \r\n                                            onClick={ () => {\r\n                                                setMensaje('');\r\n                                                dispatch( {\r\n                                                    type: types.activarChat,\r\n                                                    payload: null,\r\n                                                } )\r\n                                            } }\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                        <div\r\n                            id=\"messageID\"\r\n                            style={ {\r\n                                height: 300,\r\n                                overflowY: 'auto',\r\n                                padding: '2px 16px',\r\n                                border: '1px solid rgba(140, 140, 140, 0.35)',\r\n                            } }\r\n                        >\r\n                            { chatState.array_mensaje.map( ( item, key ) => {\r\n\r\n                                return (\r\n                                    <div key={key} style={{ width: '100%', marginTop: 6, }}>\r\n                                        { item.para === auth.uid ? \r\n                                            <Alert message={item.mensaje} type=\"success\" style={{ width: 250, float: 'right', marginBottom: 6, }} />:\r\n                                            <Alert message={item.mensaje} type=\"info\" style={{ width: 250, }} />\r\n                                        }\r\n                                    </div>\r\n                                );\r\n                            } ) }\r\n                        </div>\r\n                        <Input \r\n                            style={{ width: '100%', minWidth: '100%', }} \r\n                            placeholder=\"Escribir mensaje...\"\r\n                            value={mensaje}\r\n                            onChange={onChangeMensaje}\r\n                            onKeyPress={onKeyPressEnter}\r\n                        />\r\n                    </Col> :\r\n                    <Col xs={ { span: 24, } } sm={{ span: 12, }} md={{ span: 8, }}>\r\n                        <div\r\n                            id=\"scrollableDiv\"\r\n                            style={ {\r\n                                height: 400,\r\n                                overflowY: 'auto',\r\n                                padding: '0 16px',\r\n                                border: '1px solid rgba(140, 140, 140, 0.35)',\r\n                            } }\r\n                        >\r\n                            <List\r\n                                dataSource={ chatState.array_usuario.filter( (item) => (item.uid !== auth.uid) ) }\r\n                                renderItem={ (item, key) => (\r\n                                    <List.Item key={key} style={{ cursor: 'pointer', }} onClick={ () => onActiveChat( item ) }>\r\n                                        <List.Item.Meta\r\n                                            avatar={ <Avatar icon={<UserOutlined style={{ position: 'relative', top: -5, }} />} /> }\r\n                                            title={ \r\n                                                <a href=\"/home\" onClick={ (evt) => evt.preventDefault() }>\r\n                                                    {`${item.nombre} ${item.apellido}`}\r\n                                                </a>\r\n                                            }\r\n                                            description={item.email}\r\n                                        />\r\n                                        { item.online ? \r\n                                            <Avatar shape=\"circle\" size=\"small\" style={{ backgroundColor: '#52c41a' }} /> : \r\n                                            <Avatar shape=\"circle\" size=\"small\" style={{ backgroundColor: 'red' }} />\r\n                                        }\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                }\r\n                { props.keyMenu === '1'  ?\r\n                    <Col xs={ { span: 24, } } sm={{ span: 12, }} md={{ span: 16, }}>\r\n                        <Divider orientation=\"left\" style={{ padding: 0, margin: 0, marginBottom: 5, marginTop: -5, }}>Listado de Sala</Divider>\r\n                        <div\r\n                            id=\"scrollableDiv\"\r\n                            style={ {\r\n                                height: 400,\r\n                                overflowY: 'auto',\r\n                                padding: '0 16px',\r\n                                border: '1px solid rgba(140, 140, 140, 0.35)',\r\n                            } }\r\n                        >\r\n                            <List\r\n                                dataSource={ salaState.array_sala }\r\n                                renderItem={ ( item, key ) => (\r\n                                    <Badge.Ribbon key={key} text={ item.iniciar ? \"Iniciado\": \"No iniciado\" } color={ item.iniciar ? \"green\": \"red\" }>\r\n                                        <List.Item >\r\n                                            <List.Item.Meta\r\n                                                title={ \r\n                                                    <span>\r\n                                                        <strong>Código: </strong>{`${item.uid}`}\r\n                                                    </span>\r\n                                                }\r\n                                                description={\r\n                                                    <>\r\n                                                        <div style={{ width: '100%', }}>\r\n                                                            <span>\r\n                                                                <strong>Nombre: </strong>{`${item.nombre}`}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div style={{ width: '100%', }}>\r\n                                                            <span>\r\n                                                                <strong>Usuario: </strong>{`${item.user.nombre} ${item.user.apellido}`}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </>\r\n                                                }\r\n                                            />\r\n                                            <div>\r\n                                                <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                                                    onClick={ () => {\r\n                                                        if ( item.fkidusers === auth.uid ) {\r\n                                                            socket.emit( 'iniciar-sala', {\r\n                                                                uid: item.uid,\r\n                                                            } );\r\n                                                        }\r\n                                                        history.push( `/pizarra_virtual/${item.uid}` );\r\n                                                    } }\r\n                                                >\r\n                                                    { item.user._id === auth.uid ? \"Iniciar\" : \"Ingresar\" }\r\n                                                </Button>\r\n                                            </div>\r\n                                        </List.Item>\r\n                                    </Badge.Ribbon>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </Col> :\r\n                    \r\n                    <Col xs={ { span: 24, } } sm={{ span: 12, }} md={{ span: 16, }}>\r\n                        <Card title=\"Nueva Sala\" style={{ width: '100%' }}>\r\n                            <Row gutter={ [ 12, 8 ] }>\r\n                                <Col xs={ { span: 24, } } sm={{ span: 24, }}>\r\n                                    <Input \r\n                                        placeholder=\"iIngresar nombre de sala\" \r\n                                        value={nombreSala} style={{ width: '100%', minWidth: '100%', }}\r\n                                        onChange={(evt) => setNombreSala(evt.target.value) } \r\n                                        onKeyPress={ (evt) => {\r\n                                            if ( evt.key === \"Enter\" ) {\r\n                                                onSubmitSala();\r\n                                            }\r\n                                        } }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={ [ 12, 8 ] } justify=\"start\" style={{ marginTop: 10, }}>\r\n                                <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                                    onClick={onSubmitSala}\r\n                                >\r\n                                    Guardar\r\n                                </Button>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","\r\nimport React, { useContext } from 'react';\r\n\r\nimport { Layout, Menu, Dropdown } from 'antd';\r\nimport { CaretDownFilled, UserOutlined } from '@ant-design/icons';\r\n\r\nimport { AuthContext } from '../auth/authContext';\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nexport const AppMain = ( props ) => {\r\n    const { auth, logout } = useContext( AuthContext );\r\n\r\n    function menu() {\r\n        return (\r\n            <Menu>\r\n                <Menu.Item key=\"0\">\r\n                    Perfil\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                    Ajuste\r\n                </Menu.Item>\r\n                <Menu.Divider />\r\n                <Menu.Item key=\"3\" onClick={ logout }>\r\n                    Logout\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ position: 'relative', minHeight: '100vh', }}>\r\n                <Header style={{ backgroundColor: '#00ba8b', color: 'white', display: 'flex', justifyContent: 'space-between', }} >\r\n                    <div>\r\n                        Bienvenido\r\n                    </div>\r\n                    <div>\r\n                        <Dropdown overlay={ menu() } trigger={['click']}>\r\n                            <div style={{ cursor: 'pointer', }}>\r\n                                <UserOutlined style={{ position: 'relative', top: -3, marginRight: 2, }} /> \r\n                                    { auth.nombre } \r\n                                <CaretDownFilled style={{ position: 'relative', top: -3, marginLeft: 1, }} />\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                </Header>\r\n                <div style={{ backgroundColor: '#FFF', padding: 0, }}>\r\n                    <Menu theme=\"light\" mode=\"horizontal\" activeKey={props.keyMenu}>\r\n                        <Menu.Item key=\"1\" onClick={ () => props.setKeyMenu('1') }>\r\n                            Inicio\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" onClick={ () => props.setKeyMenu('2') }>\r\n                            Nueva Sala\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </div>\r\n                <Content style={{ margin: '24px 16px 0', }}>\r\n                    <div style={{ padding: 24, minHeight: 450, height: 470, backgroundColor: '#FFF', }}>\r\n                        { props.children }\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ backgroundColor: '#FFF', }} >\r\n                    Footer\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n","\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport '../css/diagrama.css';\r\n\r\nimport { Button, Collapse, Input } from 'antd';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\n\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { SocketContet } from '../context/socketContext';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { TableContext } from '../context/table/TableContext';\r\n\r\nimport { types } from '../types/types';\r\n// import { SalaContext } from '../context/sala/salaContext';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst PizarraVirtualPage = ( props ) => {\r\n\r\n    const { socket } = useContext( SocketContet );\r\n    const { tableState, dispatchTable } = useContext( TableContext );\r\n    // const { salaState, dispatchSala } = useContext( SalaContext );\r\n\r\n    const [ nombreSala, setNombreSala ] = useState('');\r\n    const [ itemClass, setItemClass ] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        get_data();\r\n        socket?.emit( 'ingresar-sala', {\r\n            uid: props.match?.params.uidsala,\r\n        } );\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        socket?.on( 'table-actualizado', ( table ) => {\r\n            // console.log( \"table insertado: \", table )\r\n            socket?.emit( 'ingresar-sala', {\r\n                uid: props.match?.params.uidsala,\r\n            } );\r\n        } );\r\n    }, [ socket ] );\r\n\r\n    async function get_data() {\r\n        try {\r\n            const resp = await fetchConToken(\"/sala/show/\" + props.match?.params.uidsala );\r\n            setNombreSala(resp.sala.nombre);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    function onSubmitCerrarSala() {\r\n        socket.emit( 'finalizar-sala', {\r\n            uid: props.match.params.uidsala,\r\n        } );\r\n        dispatchTable( { type: types.limpiarTable } );\r\n        // dispatchSala( { type: types.limpiarSalaUsuario, } );\r\n        history.push(\"/home\");\r\n    }\r\n\r\n    function onChangeNombreClass(evt) {\r\n        setItemClass( { ...itemClass, nombre: evt.target.value } );\r\n    }\r\n\r\n    function onChangeSubTitleClass(evt) {\r\n        setItemClass( { ...itemClass, subtitle: evt.target.value } );\r\n    }\r\n\r\n    function onChangeDescripcionClass(evt) {\r\n        setItemClass( { ...itemClass, descripcion: evt.target.value } );\r\n    }\r\n\r\n    function onSubmitTableClass() {\r\n\r\n        socket.emit( 'actualizar-table', {\r\n            nombre: itemClass.nombre,\r\n            subtitle: itemClass.subtitle,\r\n            descripcion: itemClass.descripcion,\r\n            uid: itemClass.uid,\r\n        } );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"containers\">\r\n            <a href=\"/home\" style={{ display: 'none', }} id=\"HomeInit\"></a>\r\n            <div id=\"diagramContainer\">\r\n                { tableState.array_table.map( ( item, key ) => {\r\n                    return (\r\n                        \r\n                        <Dialog \r\n                            header={ \r\n                                <>\r\n                                    <p style={{ fontSize: 12, }}> {item.nombre} </p>\r\n                                    <p style={{ fontSize: 8, textAlign: 'center', }}> {item.subtitle} </p>\r\n                                </> \r\n                            } \r\n                            visible={true} modal={false} \r\n                            id={ \"diagram\" + item.uid }\r\n                            style={{ \r\n                                width: item.width, height: item.height, \r\n                                position: 'fixed',\r\n                                top: item.top, left: item.left,\r\n                                border:  itemClass && itemClass.uid === item.uid && '2px solid red',\r\n                            }} \r\n                            className={ `${item.type === \"TP\" ? \"modalPrimeReact darks\" : \r\n                                item.type === \"TB\" ? \"modalPrimeReact\" : item.type === \"C\" ? \"modalPrimeReact user\" : \"modalPrimeReact circular\" }` \r\n                            } \r\n                            contentClassName={ `${item.type === \"C\" && \"modalContentPrimeReact user\"}`}\r\n                            closable={false} key={key} \r\n                            // footer={\r\n                            //     <div style={{ \r\n                            //             padding: 4, paddingBottom: 1, backgroundColor: \"rgb(97, 84, 156)\", \r\n                            //             color: 'white', marginTop: 1, marginBottom: 1, \r\n                            //             borderRadius: 6, fontSize: 9,\r\n                            //         }}\r\n                            //     >\r\n                            //         <p>\r\n                            //             dd\r\n                            //         </p>\r\n                            //     </div>\r\n                            // }\r\n\r\n                            onClick={ () => {\r\n                                item.index = key;\r\n                                setItemClass(item);\r\n                            } }\r\n\r\n                            // breakpoints={{'10px': '10vw', '10px': '10vw'}}\r\n                            \r\n                            contentStyle={{ padding: 0, }}\r\n                            onResizeStart={ ( evt ) => { } } \r\n                            onResize={ (evt) => { } }\r\n                            onResizeEnd={ ( evt ) => {\r\n                                let move = document.getElementById( \"diagram\" + item.uid ).getBoundingClientRect();\r\n\r\n                                socket.emit( 'actualizar-table', {\r\n                                    nombre: item.nombre,\r\n                                    subtitle: item.subtitle,\r\n                                    descripcion: item.descripcion,\r\n                                    left: move.left,\r\n                                    top: move.top,\r\n                                    uid: item.uid,\r\n                                    width: move.width,\r\n                                    height: move.height,\r\n                                } );\r\n                            } }\r\n                            \r\n                            onDragStart={ (evt) => { }} \r\n\r\n                            onDrag={ (evt) => { } }\r\n\r\n                            onDragEnd={ (evt) => {\r\n                                let move = document.getElementById( \"diagram\" + item.uid ).getBoundingClientRect();\r\n\r\n                                socket.emit( 'actualizar-table', {\r\n                                    nombre: item.nombre,\r\n                                    subtitle: item.subtitle,\r\n                                    descripcion: item.descripcion,\r\n                                    left: move.left,\r\n                                    top: move.top,\r\n                                    uid: item.uid,\r\n                                    width: move.width,\r\n                                    height: move.height,\r\n                                } );\r\n                            } }\r\n                        >\r\n                            <div style={{ \r\n                                    padding: 4, paddingBottom: 1, backgroundColor: item.background, \r\n                                    color: 'white', marginTop: 1, marginBottom: 1, \r\n                                    borderRadius: 6, fontSize: 9, height: \"95%\",\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                }}\r\n                            >\r\n                                <p>\r\n                                    { item.descripcion }\r\n                                </p>\r\n                            </div>\r\n                        </Dialog>\r\n                    );\r\n                } ) }\r\n\r\n                <div className=\"inspectorDiagram\">\r\n                    { itemClass && \r\n                        <div style={{ width: '100%', textAlign: 'right', }}>\r\n                            <CloseOutlined\r\n                                style={{ padding: 3, color: '#dddfde', cursor: 'pointer', }}\r\n                                onClick={ () => {\r\n                                    setItemClass(null)\r\n                                } }\r\n                            />\r\n                        </div>\r\n                    }\r\n                    { itemClass && \r\n                        <Collapse accordion defaultActiveKey={['1']}>\r\n                            <Panel header={ \r\n                                    <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> TITLE </span> \r\n                                } key=\"1\" style={{ backgroundColor: \"#414548\", }}\r\n                            >\r\n                                <div style={{ width: '100%', }}>\r\n                                    <Input \r\n                                        style={{ width: '100%', minWidth: '100%', }} \r\n                                        placeholder=\"Escribir nombre...\"\r\n                                        value={itemClass.nombre}\r\n                                        onChange={onChangeNombreClass}\r\n                                        onKeyPress={ (evt) => {\r\n                                            if ( evt.key === \"Enter\" ) {\r\n                                                onSubmitTableClass();\r\n                                            }\r\n                                        } }\r\n                                    />\r\n                                </div>\r\n                                <div style={{ width: '100%', textAlign: 'center', marginTop: 5, }}>\r\n                                    <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                                        onClick={onSubmitTableClass}\r\n                                    >\r\n                                        Actualizar\r\n                                    </Button>\r\n                                </div>\r\n                            </Panel>\r\n                            <Panel header={ \r\n                                    <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> SUB TITLE </span> \r\n                                } key=\"2\" style={{ backgroundColor: \"#414548\", }}\r\n                            >\r\n                                <div style={{ width: '100%', }}>\r\n                                    <Input \r\n                                        style={{ width: '100%', minWidth: '100%', }} \r\n                                        placeholder=\"Escribir sub title...\"\r\n                                        value={itemClass.subtitle}\r\n                                        onChange={onChangeSubTitleClass}\r\n                                        onKeyPress={ (evt) => {\r\n                                            if ( evt.key === \"Enter\" ) {\r\n                                                onSubmitTableClass();\r\n                                            }\r\n                                        } }\r\n                                    />\r\n                                </div>\r\n                                <div style={{ width: '100%', textAlign: 'center', marginTop: 5, }}>\r\n                                    <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                                        onClick={onSubmitTableClass}\r\n                                    >\r\n                                        Actualizar\r\n                                    </Button>\r\n                                </div>\r\n                            </Panel>\r\n                            <Panel header={ \r\n                                    <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> DESCRIPCION </span> \r\n                                } key=\"3\" style={{ backgroundColor: \"#414548\", }}\r\n                            >\r\n                                <div style={{ width: '100%', }}>\r\n                                    <Input \r\n                                        style={{ width: '100%', minWidth: '100%', }} \r\n                                        placeholder=\"Escribir descripcion...\"\r\n                                        value={itemClass.descripcion}\r\n                                        onChange={onChangeDescripcionClass}\r\n                                        onKeyPress={ (evt) => {\r\n                                            if ( evt.key === \"Enter\" ) {\r\n                                                onSubmitTableClass();\r\n                                            }\r\n                                        } }\r\n                                    />\r\n                                </div>\r\n                                <div style={{ width: '100%', textAlign: 'center', marginTop: 5, }}>\r\n                                    <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                                        onClick={onSubmitTableClass}\r\n                                    >\r\n                                        Actualizar\r\n                                    </Button>\r\n                                </div>\r\n                            </Panel>\r\n                            \r\n                        </Collapse>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"pizarraDiagram\">\r\n                <Collapse accordion defaultActiveKey={['1']}>\r\n                    <Panel header={ \r\n                            <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> Component 1 </span> \r\n                        } key=\"1\" style={{ backgroundColor: \"#414548\", }}\r\n                    >\r\n                        <div \r\n                            style={{ \r\n                                width: '100%', display: 'block', border: '1px solid rgb(246, 246, 246)', \r\n                                color: \"#dddfde\", cursor: 'pointer' \r\n                            }}\r\n                            draggable id=\"NewTableDiagramB\"\r\n                            onDragEnd={ ( evt ) => {\r\n                                var disx = evt.pageX;\r\n                                var disy = evt.pageY;\r\n                                socket.emit( 'agregar-table', {\r\n                                    uid: props.match.params.uidsala,\r\n                                    left: disx,\r\n                                    top: disy,\r\n                                    background: 'rgb(97, 84, 156)',\r\n                                    type: 'TB',\r\n                                } );\r\n                            } } \r\n                        >\r\n                            <div style={{ height: 20, backgroundColor: 'rgb(97, 84, 156)', borderRadius: 3, marginBottom: 1, paddingLeft: 5,  }}>\r\n                                TITLE\r\n                            </div>\r\n                            <div style={{ height: 40, backgroundColor: 'rgb(97, 84, 156)', borderRadius: 3, marginBottom: 1, paddingLeft: 5,  }}>\r\n                                SUB TITLE\r\n                            </div>\r\n                            <div style={{ height: 20, backgroundColor: 'rgb(97, 84, 156)', borderRadius: 3, paddingLeft: 5,  }}>\r\n                                DESCRIPTION\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Panel>\r\n\r\n                    <Panel header={ \r\n                            <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> Component 2 </span> \r\n                        } key=\"2\" style={{ backgroundColor: \"#414548\", }}\r\n                    >\r\n                        <div \r\n                            style={{ \r\n                                width: '100%', display: 'block', border: '1px solid rgb(246, 246, 246)', \r\n                                color: \"#dddfde\", cursor: 'pointer', marginTop: 20,\r\n                            }}\r\n                            draggable id=\"NewTableDiagramP\"\r\n                            onDragEnd={ ( evt ) => {\r\n                                var disx = evt.pageX;\r\n                                var disy = evt.pageY;\r\n                                socket.emit( 'agregar-table', {\r\n                                    uid: props.match.params.uidsala,\r\n                                    left: disx,\r\n                                    top: disy,\r\n                                    background: '#99A3A4',\r\n                                    type: 'TP'\r\n                                } );\r\n                            } } \r\n                        >\r\n                            <div style={{ height: 20, backgroundColor: '#99A3A4', borderRadius: 3, marginBottom: 1, paddingLeft: 5,  }}>\r\n                                TITLE\r\n                            </div>\r\n                            <div style={{ height: 40, backgroundColor: '#99A3A4', borderRadius: 3, marginBottom: 1, paddingLeft: 5,  }}>\r\n                                SUB TITLE\r\n                            </div>\r\n                            <div style={{ height: 20, backgroundColor: '#99A3A4', borderRadius: 3, paddingLeft: 5,  }}>\r\n                                DESCRIPTION\r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n                    <Panel header={ \r\n                            <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> Component 3 </span> \r\n                        } key=\"3\" style={{ backgroundColor: \"#414548\", }}\r\n                    >\r\n                        <div \r\n                            style={{ \r\n                                width: '100%', display: 'block', border: '1px solid rgb(246, 246, 246)', \r\n                                color: \"#dddfde\", cursor: 'pointer', marginTop: 20,\r\n                            }}\r\n                            draggable id=\"NewTableDiagramC\"\r\n                            onDragEnd={ ( evt ) => {\r\n                                var disx = evt.pageX;\r\n                                var disy = evt.pageY;\r\n                                socket.emit( 'agregar-table', {\r\n                                    uid: props.match.params.uidsala,\r\n                                    left: disx,\r\n                                    top: disy,\r\n                                    background: 'rgb(97, 84, 156)',\r\n                                    type: 'BD',\r\n                                } );\r\n                            } } \r\n                        >\r\n                            <div style={{ \r\n                                height: 30, backgroundColor: 'rgb(97, 84, 156)', \r\n                                borderRadius: '100px/50px', marginBottom: 1, textAlign: 'center', \r\n                                position: 'relative', top: 15, border: '1px solid #e8e8e8'\r\n                            }}>\r\n                                TITLE\r\n                            </div>\r\n                            <div style={{ \r\n                                height: 80, backgroundColor: 'rgb(97, 84, 156)', borderRadius: 3, paddingLeft: 5,\r\n                                paddingTop: 20,  \r\n                            }}>\r\n                                DESCRIPTION\r\n                            </div>\r\n                            <div style={{ \r\n                                height: 20, backgroundColor: 'rgb(97, 84, 156)', \r\n                                borderRadius: 3, paddingLeft: 5,  \r\n                                borderBottomLeftRadius: 20, borderBottomRightRadius: 20,\r\n                            }}>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n                    <Panel header={ \r\n                            <span style={{ color: \"#dddfde\", fontSize: 12, fontWeight: '700', height: 30, }}> Component 4 </span> \r\n                        } key=\"4\" style={{ backgroundColor: \"#414548\", }}\r\n                    >\r\n                        <div \r\n                            style={{ \r\n                                width: '80%', margin: 'auto', display: 'block', border: '1px solid rgb(246, 246, 246)', \r\n                                color: \"#dddfde\", cursor: 'pointer', marginTop: 20,\r\n                            }}\r\n                            draggable id=\"NewTableDiagramC\"\r\n                            onDragEnd={ ( evt ) => {\r\n                                var disx = evt.pageX;\r\n                                var disy = evt.pageY;\r\n                                socket.emit( 'agregar-table', {\r\n                                    uid: props.match.params.uidsala,\r\n                                    left: disx,\r\n                                    top: disy,\r\n                                    background: 'rgb(97, 84, 156)',\r\n                                    type: 'C',\r\n                                } );\r\n                            } } \r\n                        >\r\n                            <div style={{ \r\n                                height: 60, width: 60, margin: 'auto', backgroundColor: 'rgb(97, 84, 156)', \r\n                                borderRadius: 100, marginBottom: 1,\r\n                                position: 'relative', top: 15,\r\n                                display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n                            }}>\r\n                                TITLE\r\n                            </div>\r\n                            <div style={{ \r\n                                height: 60, backgroundColor: 'rgb(97, 84, 156)', \r\n                                borderRadius: 10, paddingLeft: 5,  \r\n                            }}>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n\r\n                </Collapse>\r\n            </div>\r\n            <div className=\"footerContainer\">\r\n                { nombreSala }\r\n                <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                    onClick={onSubmitCerrarSala}\r\n                >\r\n                    Cerrar Sala\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter( PizarraVirtualPage );\r\n","\r\nimport React, { useState } from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { HomePage } from '../pages/homePage';\r\nimport { AppMain } from '../layouts/appMain';\r\nimport PizarraVirtualPage from '../pages/pizarraVirtualPage';\r\n\r\nconst history = createBrowserHistory();\r\nexport const HomeRoute = () => {\r\n\r\n    const [ keyMenu, setKeyMenu ] = useState('1');\r\n\r\n    return (\r\n        <Switch>\r\n            \r\n            <Route exact path=\"/pizarra_virtual/:uidsala\" render={ \r\n                ( props ) => <PizarraVirtualPage { ...props } /> } \r\n            />\r\n            <Route history={history}>\r\n                <AppMain keyMenu={keyMenu} setKeyMenu={ (key) => setKeyMenu(key) }>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/home\" render={ \r\n                            ( props ) => <HomePage keyMenu={keyMenu} setKeyMenu={ (key) => setKeyMenu(key) } { ...props } /> } \r\n                        />\r\n\r\n                        <Redirect exact to=\"/home\" />\r\n                    </Switch>\r\n                    \r\n                </AppMain>\r\n            </Route>\r\n\r\n        </Switch>\r\n    );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ( props ) => {\r\n    const { isAuthenticated, component: Component, ...rest } = props;\r\n\r\n    return (\r\n        <Route \r\n            { ...rest } \r\n            component={ ( props ) => (\r\n                ( isAuthenticated ) ? <Component { ...props } /> : <Redirect to=\"/auth\" />\r\n            ) }\r\n        />\r\n    );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ( props ) => {\r\n\r\n    const { isAuthenticated, component: Component, ...rest } = props;\r\n\r\n    return (\r\n        <Route \r\n            { ...rest } \r\n            component={ ( props ) => (\r\n                ( !isAuthenticated ) ? <Component { ...props } /> : <Redirect to=\"/home\" />\r\n            ) }\r\n        />\r\n    );\r\n};\r\n","\r\nimport { Button } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\n\r\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom';\r\nimport { AuthContext } from '../auth/authContext';\r\n\r\nimport { LoadingPage } from '../pages/loadingPage';\r\n// import { PizarraVirtualPage } from '../pages/pizarraVirtualPage';\r\n\r\nimport { AuthRoute } from './authRoute';\r\nimport { HomeRoute } from './HomeRoute';\r\nimport { PrivateRoute } from './privateRoute';\r\nimport { PublicRoute } from './publicRoute';\r\n\r\nexport const AppRoute = () => {\r\n\r\n    const { auth, verificaToken } = useContext( AuthContext );\r\n\r\n    useEffect( () => {\r\n        verificaToken();\r\n    }, [verificaToken] );\r\n\r\n    if ( auth.checking ) {\r\n        return (\r\n            <LoadingPage />\r\n        );\r\n    }\r\n\r\n    if ( auth.onOffLine ) {\r\n        // return (\r\n        //     <PizarraVirtualPage />\r\n        // );\r\n\r\n        return (\r\n            <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', }}>\r\n                <div style={ { width: '40%', display: 'block' }}>\r\n                    <div>Sin Conexión a internet</div>\r\n                    <div style={{ marginTop: 10, }}>\r\n                        <Button type=\"primary\" style={{ backgroundColor: '#00ba8b', }}\r\n                            onClick={ () => document.getElementById('reiniciarUri').click() }\r\n                        >\r\n                            Reintentar\r\n                        </Button>\r\n                        <a href=\"/home\" id=\"reiniciarUri\" style={{ display: 'none' }}></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute isAuthenticated={ auth.logged } path=\"/auth\" component={ AuthRoute } />\r\n\r\n                    <PrivateRoute isAuthenticated={ auth.logged } path=\"/\" component={ HomeRoute } />\r\n\r\n                    <Redirect exact to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n","\r\nimport './App.css';\r\n\r\nimport { AuthProvider } from './auth/authContext';\r\nimport { ChatProvider } from './context/chat/chatContext';\r\nimport { SalaProvider } from './context/sala/salaContext';\r\nimport { SocketProvider } from './context/socketContext';\r\nimport { TableProvider } from './context/table/TableContext';\r\n\r\nimport { AppRoute } from './router/appRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <TableProvider>\r\n      <SalaProvider>\r\n        <ChatProvider>\r\n          <AuthProvider>\r\n            <SocketProvider>\r\n              <AppRoute />\r\n            </SocketProvider>\r\n          </AuthProvider>\r\n        </ChatProvider>\r\n      </SalaProvider>\r\n    </TableProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}